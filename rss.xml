<?xml version="1.0"  encoding="UTF-8"?>
<rss version="2.0">  <channel>
    <title>konan&#39;s blog</title>
    <link>http://konanzheng.github.io</link>
    <pubDate>10 Feb 15 10:54 CST</pubDate>
    <item>
      <title>love</title>
      <link>http://konanzheng.github.io/default/love/</link>
      <pubDate>2015-02-10 12:00:00 +0800</pubDate>
      <description></description>
    </item>
    <item>
      <title>整理下工具类的东西</title>
      <link>http://konanzheng.github.io/工具类 小东西/%E6%95%B4%E7%90%86%E4%B8%8B%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%B8%9C%E8%A5%BF/</link>
      <pubDate>2014-12-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;好久没更新过个人博客了，就是懒。很多事情不论多大多小能坚持确实不容易，不过幸好自己感兴趣的时候就能稍微坚持下了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;###目前已有的几个小工具总结一下&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;/tools/oacode/index.html&#34;&gt;组织机构代码号生成&lt;/a&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;/tools/idcard/index.html&#34;&gt;18位身份证号码生成&lt;/a&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;https://www.zybuluo.com/kevinZheng/note/55263&#34;&gt;java Web工程补丁导出工具1.0&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>基于websocket和netty的web即时通讯</title>
      <link>http://konanzheng.github.io/default/%E5%9F%BA%E4%BA%8Ewebsocket%E5%92%8Cnetty%E7%9A%84web%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/</link>
      <pubDate>2014-02-26 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&amp;nbsp;&amp;nbsp;现在新的浏览器逐步都支持websocket了，而项目上也已经有基于netty&lt;br /&gt;&#xA;的及时通讯所以想结合两者来实现web即时通讯.&lt;br /&gt;&#xA;目前项目上是使用flash与netty通信的但是有跨域的问题和flash支持的问题&lt;br /&gt;&#xA;增加webscoket协议之后可以将多种框架柔和到一起，在浏览器客户端上判断&lt;br /&gt;&#xA;是否支持websocket如果支持直接使用websocket，如果不支持再使用flash。&lt;br /&gt;&#xA;之前的业务逻辑代码是不能变的，但是flash调用js方法接口写死的所以需要&lt;br /&gt;&#xA;整合两种通信方式提供统一的业务接口。还要实现服务器端安全认证，防止非&lt;br /&gt;&#xA;正常数据交互&#xA;&lt;img src=&#34;/images/netty-websocket.png&#34; alt=&#34;xmind截图&#34; width=&#34;950&#34; height=&#34;668&#34;/&gt;&lt;br /&gt;&#xA;&lt;a href=&#34;/filedownload/netty-websocket.xmind&#34;&gt;xmind图下载&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>goodday</title>
      <link>http://konanzheng.github.io/Gor/goodday/</link>
      <pubDate>2014-01-26 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;第一次使用markdown写博客&lt;/h1&gt;&#xA;&#xA;&lt;p&gt;###大概了解一下markdown的语法就可以开工，同时开着网页一边学一边用&lt;/p&gt;&#xA;&#xA;&lt;p&gt;尝试使用了几次git命令，因为长期使用svn所以对git的有些操作还是很奇怪的&lt;/p&gt;&#xA;&#xA;&lt;p&gt;比如git add 和git commit，不明白为什每次都样先add所以查了下&lt;br /&gt;&#xA;&lt;a href=&#34;http://www.zhihu.com/question/19946553/&#34;&gt;知乎&lt;/a&gt;&#xA;&lt;strong&gt;觉得这个简单的命令背后是更深层次的设计理念&lt;/strong&gt;&#xA;&amp;gt; Linus在设计之初就希望git是一个小工具的集合体，它的每个组成部分应该是&lt;br /&gt;&#xA;&amp;gt; 一个高度的抽象，这样系统的设计符合Unix的简单、可组合的原则。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;记录下学习计划：&#xA;1. git命令和github这个平台&#xA;2. markdown语法&#xA;3. 知乎（各个方面的东西都很有趣，尤其是很多以前自己觉得别人肯定不会问的问题原来很多人都在问都在答）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;列一个兴趣计划：&#xA;+ python 语言&#xA;+ head first设计模式&#xA;+ git 与svn 的对比&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>你的第一篇博客</title>
      <link>http://konanzheng.github.io/2013/new-born.html</link>
      <pubDate>2013-02-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;感谢你使用Gor编写博客&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;本文位于 posts/first-blog.md , 你可以任意删掉,修改这个文件&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;文件开头是当前文章的元数据&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;date为自动生成, 当然,你可以修改,这是你的自由&lt;/li&gt;&#xA;&lt;li&gt;permalink 可以是固定地址,也可以由gor为你自动生成&lt;/li&gt;&#xA;&lt;li&gt;categories 就是分类, 可以多个&lt;/li&gt;&#xA;&lt;li&gt;tags 同理,多个标签也是很常见的&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;请确保文件使用UTF8 without BOM编码&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;你可以通过执行下面的语句来新建一篇博客:&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor post 文章标题&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;编译你的博客,并预览之&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor compile #编译&#xA;gor http&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;然后打开你的浏览器,访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 来预览&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;你将使用Markdown来编写博客&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/&#34;&gt;Markdown 语法中文版&lt;/a&gt; 能让你快速入门其语法&lt;/p&gt;&#xA;&#xA;&lt;p&gt;相信&lt;a href=&#34;http://markdownpad.com&#34;&gt;MarkdownPad&lt;/a&gt;或&lt;a href=&#34;http://code.google.com/p/liteide/&#34;&gt;liteide&lt;/a&gt;会是你的编写博客的好帮手&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;如果你打算部署到github的pages上&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;申请github帐户&lt;/li&gt;&#xA;&lt;li&gt;新建一个库 username.github.com 即你的用户名命名的地址&lt;/li&gt;&#xA;&lt;li&gt;将compiled目录,作为根路径,提交上去github.com上&lt;/li&gt;&#xA;&lt;li&gt;稍等几分钟, 你即可通过 &lt;a href=&#34;http://username.github.com&#34;&gt;http://username.github.com&lt;/a&gt; 访问到&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;附上git教程 &lt;a href=&#34;http://gitbook.liuhui998.com/&#34;&gt;GitBook中文版&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;一般来说,你只需要几个简单的git命令就足以应付大部分需求(仅示例)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/wendal/wendal.net.git&#xA;git add -A&#xA;git commit -m &amp;quot;...&amp;quot;&#xA;git pull&#xA;git push&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;用gor编写博客将会是一件很开心的事,如果有任何意见或建议,欢迎到 &lt;a href=&#34;http://github.com/wendal/gor&#34;&gt;gor的官网&lt;/a&gt; 提交issue&lt;/h2&gt;&#xA;&#xA;&lt;h1&gt;祝你使用愉快&lt;/h1&gt;&#xA;</description>
    </item>
  </channel>
</rss>